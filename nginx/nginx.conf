user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

 http {
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
   
   log_format custom_cache_log '[$time_local] [Cache:$upstream_cache_status] [$host] [Remote_Addr: $remote_addr] - $remote_user - $server_name to: $upstream_addr: "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" ' ;


    access_log  /var/log/nginx/access.log  main;
    error_log /var/log/nginx/error.log;


    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
    include       /etc/nginx/mime.types;


    add_header Strict-Transport-Security "max-age=31536000" always;
    add_header X-Cache $upstream_cache_status;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;


fastcgi_cache_path /etc/nginx/cache levels=1:2 keys_zone=microcache:100m inactive=1d max_size=100m;
# A key that is used to uniquely identify a cached page
fastcgi_cache_key "$scheme://$host$request_method$request_uri";

    server_tokens       off;
}

